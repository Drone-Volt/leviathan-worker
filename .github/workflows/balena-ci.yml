on:
  pull_request:
    types: [opened, synchronize, closed]
    branches:
      - master

jobs:

  deploy:
    runs-on: ubuntu-22.04
    env:
      ENVIRONMENT: balena-cloud.com
    outputs:
      amd64_commit: ${{ steps.amd64_release.outputs.commit }}
      aarch64_commit: ${{ steps.aarch64_release.outputs.commit }}
      armv7hf_commit: ${{ steps.armv7hf_release.outputs.commit }}
    strategy:
      fail-fast: true
      matrix:
        fleets:
          - balena/testbot-rig
          - balena/testbot-rig-beta
          - balena/testbot-personal
          - balena/leviathan-worker-amd64
          - balena/leviathan-worker-aarch64
          - balena/leviathan-worker-armv7hf
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: balena-io/deploy-to-balena-action@v0.11.0
        id: push
        with:
          balena_token: ${{ secrets.BALENA_API_KEY_PUSH }}
          fleet: ${{ matrix.fleets }}
          versionbot: true
          environment: ${{ env.ENVIRONMENT }}
      - if: matrix.fleets == 'balena/leviathan-worker-amd64'
        id: amd64_release
        run: |
          echo "::set-output name=commit::$(curl -fsSL -X GET \
            "https://api.${{ env.ENVIRONMENT }}/v6/release(${{ steps.push.outputs.release_id }})?\$select=commit" \
            -H "Content-Type: application/json" -H "Authorization: Bearer ${{ secrets.BALENA_API_KEY_PUSH }}" | jq -r '.d[].commit')"
      - if: matrix.fleets == 'balena/leviathan-worker-aarch64'
        id: aarch64_release
        run: |
          echo "::set-output name=commit::$(curl -fsSL -X GET \
            "https://api.${{ env.ENVIRONMENT }}/v6/release(${{ steps.push.outputs.release_id }})?\$select=commit" \
            -H "Content-Type: application/json" -H "Authorization: Bearer ${{ secrets.BALENA_API_KEY_PUSH }}" | jq -r '.d[].commit')"
      - if: matrix.fleets == 'balena/leviathan-worker-armv7hf'
        id: armv7hf_release
        run: |
          echo "::set-output name=commit::$(curl -fsSL -X GET \
            "https://api.${{ env.ENVIRONMENT }}/v6/release(${{ steps.push.outputs.release_id }})?\$select=commit" \
            -H "Content-Type: application/json" -H "Authorization: Bearer ${{ secrets.BALENA_API_KEY_PUSH }}" | jq -r '.d[].commit')"

  e2e:
    needs: [deploy]
    if: github.event.pull_request.closed == false
    runs-on: ubuntu-22.04
    env:
      SUITES: ./suites
      REPORTS: ./reports
      WORKSPACE: ./workspace
      BALENACLOUD_ORG: testbot
      BALENACLOUD_API_KEY: ${{ secrets.BALENA_TESTBOT_TOKEN }}
      BALENACLOUD_APP_NAME: balena/testbot-rig
      QEMU_CPUS: 1
      QEMU_MEMORY: 1G
      WORKER_TYPE: ${{ matrix.WORKER_TYPE }}
      DEVICE_TYPE: ${{ matrix.DEVICE_TYPE }}
      WORKER_RELEASE: ${{needs.deploy.outputs.amd64_commit}} # draft release from deploy job
    strategy:
      fail-fast: false
      matrix:
        include:
          - DEVICE_TYPE: genericx86-64-ext
            WORKER_TYPE: qemu
          # - DEVICE_TYPE: genericx-aarch64
          #   WORKER_TYPE: qemu
          # - DEVICE_TYPE: raspberrypi3
          #   WORKER_TYPE: testbot
          # - DEVICE_TYPE: raspberrypi4-64
          #   WORKER_TYPE: testbot
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          repository: balena-os/leviathan
          ref: master
      - name: Copy suite config
        run: cp -a ${{ env.SUITES }}/config.js ${{ env.WORKSPACE }}/config.js
      - name: Build leviathan images
        run: make build

      # - name: Select and repin a testbot worker
      #   if: ${{ env.DEVICE_TYPE }} == 'testbot'
      #   run: #TODO
      
      - name: Run test suite
        run: make test
      - uses: actions/upload-artifact@v3
        with:
          name: reports-${{ env.WORKER_TYPE }}-${{ env.DEVICE_TYPE }}
          path: ${{ env.REPORTS }}
